
pumpAndDump{
        if(linkedList.size < 50) {
            return null;
        } else {
            dumpingState = false ;
            // check for dumpingState
            // look at latest and previous price averages
              //look at percentage increase/decrease, if there is a large enough decrease
              int difference = PriceAverage.Get(LatestPrice) -  PriceAverage.Get(PreviousPrice)
              percentage_decrease = (difference/PriceAverage.Get(PreviousPrice)) *100
              if (percentage_decrease> -30){
                  dumpingState = true;
              }

              //checking for pumpingState
              /* t = time of drop
              a = predefined gradient of threshold lines
              d = +- from drop point
              */
              if (dumpingState) {
                      Yarray = [];

                      for (int i = t; i >= t-50; i--) {
                        if ( (getMovingAverage(i)) <= getMovingAverage(t) + d - (a*(t-i)) ) {
                            // within threshold
                            Yarray.add( getMovingAverage(i) );
                            // send array of data
                        } else {
                            // not within threshold
                            return null;
                        }
                      }
                      // if code reaches here, then pumping state is true
                      return Yarray;
              }
        }
}
